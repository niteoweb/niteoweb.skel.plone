[buildout]
extends = base.cfg

parts +=
# development tools
    omelette
    sphinxbuilder
    test
    fabfile

# generate config files from ./etc
    nginx-conf

# Zope instance
    instance

eggs +=
    niteoweb.zulu [test,develop]


# =========================
# Develop external packages
# =========================
extensions += mr.developer
sources = sources
auto-checkout = *

[sources]
# niteoweb.fabfile = git git@github.com:niteoweb/niteoweb.fabfile.git


# ===============================================
# Mirrors python namespaces into one handy folder
# ===============================================
[omelette]
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}


# ======================================
# Prepare Sphinx documentation generator
# ======================================
[sphinxbuilder]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/docs
interpreter = ${buildout:directory}/bin/zopepy


# ==========================================
# Prepare test-runner for running unit tests
# ==========================================
[test]
recipe = zc.recipe.testrunner
defaults = ['--exit-with-status', '--auto-color', '--auto-progress']
eggs =
    ${buildout:eggs}
    niteoweb.zulu [test]


[fabfile]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/fabfile.py.in
output = ${buildout:directory}/fabfile.py


# ================================
# Generate config files from ./etc
# ================================
[nginx-conf]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/nginx.conf.in
output = ${buildout:directory}/etc/nginx.conf


# ==================================
# Create a development Zope instance
# ==================================
[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
debug-mode = off
verbose-security = on
environment-vars = zope_i18n_compile_mo_files = true
eggs = ${buildout:eggs}
